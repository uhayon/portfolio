// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Mounting Header Must match snapshot without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header
    handleLanguageSwitch={[MockFunction]}
    selectedLanguage="EN"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <a
          className="linkLogo"
          href="#home"
        >
          <Logo />
        </a>,
        <ToggleNavigationBarButton
          handleNavButtonPress={[Function]}
          isExpandButton={true}
          isMobileScreen={false}
        />,
        <NavigationBar
          buttons={
            Array [
              Object {
                "sectionId": "skills",
                "title": Object {
                  "EN": "Skills",
                  "ES": "Habilidades",
                },
              },
              Object {
                "sectionId": "projects",
                "title": Object {
                  "EN": "Projects",
                  "ES": "Proyectos",
                },
              },
              Object {
                "sectionId": "contact",
                "title": Object {
                  "EN": "Contact Me",
                  "ES": "Contactame",
                },
              },
            ]
          }
          handleLanguageSwitch={[MockFunction]}
          isExpanded={false}
          isSideBar={false}
          selectedLanguage="EN"
          toggleSidebarExpansion={[Function]}
        />,
      ],
      "className": "header ",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Logo />,
          "className": "linkLogo",
          "href": "#home",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "a",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "handleNavButtonPress": [Function],
          "isExpandButton": true,
          "isMobileScreen": false,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "buttons": Array [
            Object {
              "sectionId": "skills",
              "title": Object {
                "EN": "Skills",
                "ES": "Habilidades",
              },
            },
            Object {
              "sectionId": "projects",
              "title": Object {
                "EN": "Projects",
                "ES": "Proyectos",
              },
            },
            Object {
              "sectionId": "contact",
              "title": Object {
                "EN": "Contact Me",
                "ES": "Contactame",
              },
            },
          ],
          "handleLanguageSwitch": [MockFunction],
          "isExpanded": false,
          "isSideBar": false,
          "selectedLanguage": "EN",
          "toggleSidebarExpansion": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "header",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <a
            className="linkLogo"
            href="#home"
          >
            <Logo />
          </a>,
          <ToggleNavigationBarButton
            handleNavButtonPress={[Function]}
            isExpandButton={true}
            isMobileScreen={false}
          />,
          <NavigationBar
            buttons={
              Array [
                Object {
                  "sectionId": "skills",
                  "title": Object {
                    "EN": "Skills",
                    "ES": "Habilidades",
                  },
                },
                Object {
                  "sectionId": "projects",
                  "title": Object {
                    "EN": "Projects",
                    "ES": "Proyectos",
                  },
                },
                Object {
                  "sectionId": "contact",
                  "title": Object {
                    "EN": "Contact Me",
                    "ES": "Contactame",
                  },
                },
              ]
            }
            handleLanguageSwitch={[MockFunction]}
            isExpanded={false}
            isSideBar={false}
            selectedLanguage="EN"
            toggleSidebarExpansion={[Function]}
          />,
        ],
        "className": "header ",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Logo />,
            "className": "linkLogo",
            "href": "#home",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "a",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "handleNavButtonPress": [Function],
            "isExpandButton": true,
            "isMobileScreen": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "buttons": Array [
              Object {
                "sectionId": "skills",
                "title": Object {
                  "EN": "Skills",
                  "ES": "Habilidades",
                },
              },
              Object {
                "sectionId": "projects",
                "title": Object {
                  "EN": "Projects",
                  "ES": "Proyectos",
                },
              },
              Object {
                "sectionId": "contact",
                "title": Object {
                  "EN": "Contact Me",
                  "ES": "Contactame",
                },
              },
            ],
            "handleLanguageSwitch": [MockFunction],
            "isExpanded": false,
            "isSideBar": false,
            "selectedLanguage": "EN",
            "toggleSidebarExpansion": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "header",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
